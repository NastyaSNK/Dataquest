Connecting to a PostgreSQL database called "postgres" with a user called "postgres":

import psycopg2
conn = psycopg2.connect("dbname=postgres user=postgres")

Initializing a Cursor object:

conn.cursor()

Closing the database connection:

conn.close()

Creating a table:

CREATE TABLE tableName(
   column1 dataType1 PRIMARY KEY,
   column2 dataType2,
   column3 dataType3,
   ...
   );

Executing a query:

cur.execute("SELECT * FROM notes;")

Applying the changes to the database:

conn.commit()

Removing a SQL transaction:

conn.rollback()

Activating autocommit:

conn.autocommit = True

Fetching one result:

cur.fetchone()

Fetching all rows in the table:

cur.fetchall()

Inserting rows into a table:

INSERT INTO tableName
VALUES (value1, value2, ...);

Specifying an owner when creating a database:

CREATE DATABASE income OWNER dq;

Removing a database:

DROP DATABASE income;

Концепции
SQLite не допускает ограничения доступа к базе данных.
PostgreSQL - это наиболее часто используемый движок базы данных. Это мощный и открытый исходный код (бесплатное для загрузки и использования).
PostgreSQL позволяет создавать несколько баз данных.
PostgreSQL состоит из сервера и клиентов.
Сервер - это программа, которая управляет базами данных и обрабатывает запросы.
Клиенты общаются на сервере и обратно. Несколько клиентов могут общаться с сервером одновременно.
Самый распространенный клиент Python для PostgreSQL называется psycopg2`.
PostgreSQL использует транзакции SQL для предотвращения внесения изменений в базу данных в случае сбоя любой из транзакций.
